from config import *
import draw

if __name__ == '__main__':
    figure, axis = draw.init()
    draw.headline(axis, '机器学习：从数据中学习规则', x_pos = WIDTH_4K / 2, y_pos=HEIGHT_4K * 3 / 4, font_properties=noto_sans_sc['ExtraBold'], fontsize=LARGE_SIZE + SMALL_SIZE)
    draw.image_center(axis, 'res/deep_learning/feedback_machine_learning.drawio.png', pos_x=WIDTH_4K / 2, pos_y=HEIGHT_4K * 3 / 8)
    draw.save('01_00_cover.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '1. 传统编程')
    draw.text(axis, '传统编程三要素：规则 (Rule)、数据 (Data)、答案 (Answer)', index=0)
    draw.text(axis, '举例：确认一个人是否符合银行贷款需求？', index=2)
    draw.text(axis, '规则：年龄在 18 - 65 岁之间，年收入 3 万元，才能够进行贷款', index=3)
    draw.text(axis, '数据：年龄 30 岁，年收入 10 万元', index=4)
    draw.text(axis, '答案：可以贷款', index=5)
    draw.code(axis, 'def check_loan_eligibility(age, income):', index=7)
    draw.code(axis, "    if age < 18 or age > 65: return 'NO'", index=8)
    draw.code(axis, "    if income < 30000: return 'NO'", index=9)
    draw.code(axis, "    return 'YES'", index=10)
    draw.text(axis, "优点：简单、高效、明确", index=12)
    draw.text(axis, "缺点：处理复杂数据集困难，比如识别照片中的花", index=13)
    draw.image_v_center(axis, 'res/deep_learning/flower_tatarian_aster.jpg', left=LARGE_OFFSET * 23, scale=1.5)
    draw.save('01_01_classical_programming.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '2. 机器学习')
    draw.text(axis, '机器学习将上述过程反过来，它通过观察输入数据和对应的回答，来理解规则是什么。', index=0)
    draw.image_h_center(axis, 'res/deep_learning/machine_learning_paradigm.drawio.png', bottom=LARGE_OFFSET * 4)
    draw.save('01_02_machine_learning_paradigm.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '3. 查看数据集')
    draw.text(axis, '包含几千张花卉的照片以及它们对应的名称（雏菊、玫瑰、向日葵、蒲公英、郁金香）。', index=0)
    draw.text(axis, '传统编程很难通过编写规则的方式识别图片中的菊花（图1和图3）。', index=1)
    draw.text(axis, '使用机器学习非常容易，通过学习非常多的示例，得到规则从而能对花卉照片进行精确分类。', index=2)
    draw.image_h_center(axis, 'res/deep_learning/flower_dataset.jpg', bottom=LARGE_OFFSET * 2, scale=2)
    draw.save('01_03_flower_dataset.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '4. 什么是机器学习')
    draw.text(axis, '人工智能 (Artificial Intelligence) 是构建模拟智能行为的系统，有很多种实现，包括基于逻辑、搜索、概率等方法。', index=0)
    draw.text(axis, '机器学习是人工智能的子领域，通过观察数据对模型进行训练，从而能够做出决策。', index=2)
    draw.text(axis, '这个领域已经爆发式增长，现在几乎是 AI 的代名词。', index=3)
    draw.text(axis, '深度学习 (Deep Learning) 是机器学习的一个分支，', index=5)
    draw.text(axis, '是一种以人工神经网络 (Artificial Neural Network) ', index=6)
    draw.text(axis, '为架构，对数据进行学习的算法。', index=7)
    draw.image_by_offset(axis, 'res/deep_learning/ai_ml_dp.drawio.png', left = LEFT_OFFSET * 13, bottom=MEDIUM_OFFSET, scale=0.8)
    draw.save('01_04_what_is_machine_learning_1.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '4. 什么是机器学习')
    draw.text(axis, '机器学习通过给定示例数据，在处理数据过程中发现规则，那么机器学习需要三点东西：', index=0)
    draw.text(axis, "输入数据、期望输出、测量算法好坏的手段", index=1)
    draw.text(axis, '(1) 输入数据 (Input Data)：比如语音识别任务，数据可以是人们说话的声音文件；', index=3)
    draw.text(axis, '图像打标签任务，输入就是图片和对应的标签。', index=4)
    draw.image_h_center(axis, 'res/deep_learning/cifar10.png', bottom=SMALL_OFFSET, scale=2.0)
    draw.save('01_04_what_is_machine_learning_2.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '4. 什么是机器学习')
    draw.text(axis, '(2) 期望输出 (Expected Output)：在语音识别任务中，输出可以是识别的文本；', index=0)
    draw.text(axis, '在图像识别任务中，输出可以是猫、狗、花等标签。', index=1)
    draw.text(axis, '输入文字描述，输出用户想要的图片。', index=3)
    draw.text(axis, 'ChatGPT 中输入：Create an image of cat , 16:9', index=4)
    draw.image_h_center(axis, 'res/deep_learning/cat_gen.webp', bottom=LARGE_OFFSET)
    draw.save('01_04_what_is_machine_learning_3.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, "4. 什么是机器学习")
    draw.text(axis, '(3) 测量算法好坏的手段 (Measure)：计算系统当前的输出和期望输出的距离，测量手段是非常有必要的。', index=0)
    draw.text(axis, '测量的结果将作为反馈信号去调整算法的工作，这个调整步骤通常称之为学习 (Learning)。', index=1)
    draw.text(axis, '训练与预测', index=3)
    draw.image_h_center(axis, 'res/deep_learning/feedback_machine_learning.drawio.png', bottom=EXTRA_OFFSET)
    draw.save('01_04_what_is_machine_learning_4.png')

    # ref: https://aws.amazon.com/cn/what-is/machine-learning/
    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, "5. 机器学习原理")
    draw.text(axis, '机器学习的核心问题就是有用的数据转换 (Data Transform)：', index=0)
    draw.text(axis, '学习输入数据有用的表示 (Representation) ，这种表示可以更接近得到期望输出。', index=1)
    draw.text(axis, '为算法提供了以下输入/输出 (i,o) 组合来“训练”算法 – (2,10)、(5,19) 和 (9,31)', index=2)
    draw.text(axis, '算法计算出输入和输出之间的关系为：o=3*i+4', index=3)
    draw.text(axis, '为算法提供输入 7，并要求算法预测输出。', index=4)
    draw.text(axis, '算法会自动确定输出为 25', index=5)
    draw.image_h_center(axis, 'res/deep_learning/linear_function.png', bottom=MEDIUM_OFFSET, scale=0.8)
    draw.save('01_05_what_is_machine_learning_5.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, "机器学习类型")
    draw.text(axis, '(1) 有监督机器学习', index=0)
    draw.text(axis, '有监督学习必需使用标注后的训练数据。例如，数百万张苹果和香蕉图片需要贴上“苹果”或“香蕉”的标签。', index=1)
    draw.text(axis, '(2) 无监督机器学习', index=3)
    draw.text(axis, '无监督学习算法会使用未标注的数据进行训练。', index=4)
    draw.text(axis, '(3) 半监督学习', index=6)
    draw.text(axis, '使用少量已标注数据和大量未标注数据来训练系统。', index=7)
    draw.text(axis, '(4) 强化机器学习', index=9)
    draw.text(axis, '强化学习是在算法必经的多个阶段附加奖励值的方法。', index=10)
    draw.save('01_06_type_of_machine_learning.png')

    figure, axis = draw.init()
    draw.title(axis, '1.1 从数据中学习规则')
    draw.subtitle(axis, '机器学习优缺点')
    draw.text(axis, '机器学习模型的优点：', index=0)
    draw.text(axis, '(1) 可以识别人类可能遗漏的数据趋势和模式。', index=1)
    draw.text(axis, '(2) 设置后无需人工干预即可运作。', index=2)
    draw.text(axis, '(3) 结果会随着时间推移越来越准确。', index=3)
    draw.text(axis, '(4) 可以在动态、大容量和复杂的数据环境中处理各种数据格式。', index=4)
    draw.text(axis, '机器学习模型的缺点：', index=6)
    draw.text(axis, '(1) 初始训练成本较高且非常耗时。如果没有充足的数据，可能难以运作。', index=7)
    draw.text(axis, '(2) 如果在内部设置硬件，则机器学习是一种需要大量初始投资的计算密集型流程。', index=8)
    draw.text(axis, '(3) 在没有专家帮助的情况下，可能很难正确解释结果并消除不确定性。 ', index=9)
    draw.save('01_07_pros_and_cons.png')
